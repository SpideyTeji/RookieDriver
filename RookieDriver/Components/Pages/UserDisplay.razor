@page "/user"
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer
@inject NavigationManager navigationManager

<MudGrid>
    <MudItem xs="12">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h2">Hello @user.Username, Welcome to the practice test.</MudText>
                    <br/>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                @* Display User test attempt history with their scores. *@
                <MudTable Items="@user.ResultHistory.AsEnumerable()" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
                    <HeaderContent>
                        <MudTh>Test Date</MudTh>
                        <MudTh>Total</MudTh>
                        <MudTh>FinalScore</MudTh>
                        <MudTh>Percentage</MudTh>
                        <MudTh>Pass/Fail</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Test Date">@context.TestDate</MudTd>
                            <MudTd DataLabel="Total">@context.TotalScore</MudTd>
                            <MudTd DataLabel="FinalScore">@context.FinalScore</MudTd>
                            <MudTd DataLabel="Percentage">@(Math.Round(((double)context.FinalScore / (double)context.TotalScore) * 100, 2)) %</MudTd>
                            <MudTd DataLabel="Pass/Fail">@(context.FinalScore >= context.PassScore ? "Pass" : "Fail")</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="@StartTest"
                               Color="Color.Primary" Class="ml-auto">Start Test</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>

@code {
    private User user; // Current user logged in.

    private UserManager userManager; // Manager to read/write user info
    private bool _loading;

    protected override void OnInitialized()
    {
        if(!RookieDriverContext.IsUserLoggedIn)
        {
            navigationManager.NavigateTo("/", forceLoad: true);
        }

        RookieDriverContext.InTutorial = false;

        var username = RookieDriverContext.LoggedInUsername;
        userManager = new UserManager();

        if (!string.IsNullOrEmpty(username))
        {
            user = userManager.GetUser(username);
        }
    }

    /// <summary>
    /// Start the test and navigate to questions page.
    /// </summary>
    private void StartTest()
    {
        RookieDriverContext.IsTestStarted = true;
        navigationManager.NavigateTo("/question", forceLoad: true);
    }

}

