@page "/user"
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

@if (IsUserLoggedIn) @*Is User Logged in successfully*@
{
    <div>
        <label>
            Hello @user.Username, Welcome to the practice test.

            Would you like a tutorial of the app?

        </label>
    </div>

    @foreach (Test test in user.ResultHistory)
    {
        <div>
            <label>
                Your Score is: @test.FinalScore/45
            </label>
            <br />
            @if (test.FinalScore >= 41)
            {
                <label>
                    You have passed! Congratulations
                </label>
            }
            else
            {
                <label>
                    You have failed! Sorry
                </label>
            }
            <br />
            <label>
                Your Test Date is: @test.TestDate
            </label>
        </div>
    }
}
else @*Is User failed to login*@
{
    <EditForm Model="@model" OnSubmit="@ValidateLogin" >
        <div class="form-group">
            <label>
                Username : <InputText id="username" @bind-Value="@model.Username" />
            </label>
        </div>
        <br />
        <div class="form-group">
            <label>
                Password : <InputText id="password" @bind-Value="@model.Password" />
            </label>
        </div>
        <div class="form-group">
            <button type="submit" id="login" class="btn btn-primary">Login</button>
        </div>
    </EditForm>
}


@code {
    private User user;
    private bool IsUserLoggedIn;
    private bool IsNewUser;
    private UserManager userManager;

    private string userstr = "";

    private LoginModel model = new LoginModel();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        userManager = new UserManager();

    }

    private void ValidateLogin()
    {
        bool isLoggedIn = userManager.UserLogin(model.Username, model.Password);

        if (isLoggedIn == true)
        {
            IsUserLoggedIn = true;
            user = userManager.GetUser(model.Username);
        }
    }

    public class LoginModel
    {
        [Required]
        public string Password { get; set; }

        [Required]
        public string Username { get; set; }
    }
}

