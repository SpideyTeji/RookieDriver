@page "/user"
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

@if (IsUserLoggedIn) @*Is User Logged in successfully*@
{
    <div>
        <label>
            Hello @user.Username, Welcome to the practice test.

            Would you like a tutorial of the app?

        </label>
    </div>

    @foreach (Test test in user.ResultHistory)
    {
        <div>
            <label>
                Your Score is: @test.FinalScore/45
            </label>
            <br />
            @if (test.FinalScore >= 41)
            {
                <label>
                    You have passed! Congratulations
                </label>
            }
            else
            {
                <label>
                    You have failed! Sorry
                </label>
            }
            <br />
            <label>
                Your Test Date is: @test.TestDate
            </label>
        </div>
    }
}
else @*Is User failed to login*@
{
    @if (IsNewUser)
    {
        @*Registation For new user*@
        
    }
    else
    {
        <EditForm Model="@model" OnValidSubmit="@ValidateLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <MudGrid>
                <MudItem xs="12" sm="7">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField Label="Username" HelperText="Enter your username"
                                          @bind-Value="@model.Username" For="@(() => model.Username)" />
                            <MudTextField Label="Password" HelperText="Enter your password" Class="mt-3"
                                          @bind-Value="@model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Submit</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" sm="7">
                    <MudText Typo="Typo.body2" Align="Align.Center">
                        New her please, Register
                    </MudText>
                </MudItem>
                <MudItem xs="12" sm="5">
                    <MudText Typo="Typo.body2" Align="Align.Center">
                        <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="@ShowRegisterUser"
                                   Color="Color.Primary" Class="ml-auto">New User</MudButton>
                    </MudText>
                </MudItem>
            </MudGrid>
        </EditForm>
    }    
}


@code {
    private User user;
    private bool IsUserLoggedIn;
    private bool IsNewUser;
    private UserManager userManager;

    private string userstr = "";

    private LoginModel model = new LoginModel();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        userManager = new UserManager();

    }

    private void ValidateLogin(EditContext context)
    {
        bool isLoggedIn = userManager.UserLogin(model.Username, model.Password);

        if (isLoggedIn == true)
        {
            IsUserLoggedIn = true;
            user = userManager.GetUser(model.Username);
        }
        StateHasChanged();

    }

    private void ShowRegisterUser()
    {
        IsNewUser = true;
    }

    public class LoginModel
    {
        [Required]
        public string Password { get; set; }

        [Required]
        public string Username { get; set; }
    }
}

