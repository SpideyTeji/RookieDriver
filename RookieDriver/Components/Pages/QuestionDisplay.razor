@page "/question"
@rendermode InteractiveServer
@inject NavigationManager navigationManager


@if (IsSubmitted)
{
    <MudGrid Spacing="10" Justify="Justify.Center">
        <MudItem>
            <MudCard>
                <MudCardHeader>
                    <MudChip Size="Size.Large" Label="true" Color="Color.Info">
                        <AvatarContent>
                            <MudAvatar>@avatarName</MudAvatar>
                        </AvatarContent>
                        <ChildContent>Hello @username, Thank you for taking the test</ChildContent>
                    </MudChip>
                </MudCardHeader>
                <MudCardContent>
                    <MudDivider />
                    <MudText>You score is @UserScore / @CurrentTest.TotalScore</MudText>
                    @if (UserScore >= @CurrentTest.PassScore)
                    {
                        <MudText>Congratulations! You've passed the test.</MudText>
                    }
                    else
                    {
                        <MudText>Unfortunately! You've failed the test.</MudText>
                    }
                    <MudDivider/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@FinishTest">Finish Test</MudButton>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@RetakeTest">Retake Test</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
}
else
{
    <MudGrid>
        <MudItem xs="8">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText>Question @(index + 1) </MudText>
                        <MudText>@DisplayQuestion.Description</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudGrid>
                        <MudItem>
                                <MudRadioGroup Name="Options" @bind-Value="@DisplayQuestion.UserAnswer" class="d-flex flex-column">
                                @foreach (var option in DisplayQuestion.Options)
                                {
                                    <MudRadio class="d-block" Value="@option.Id">@option.Description</MudRadio>
                                }
                            </MudRadioGroup>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
                <MudCardActions>
                    @if (index < CurrentTest.TotalScore - 1)
                    {
                        <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@Next">Next Question</MudButton>
                    }
                    else if (index == CurrentTest.TotalScore - 1)
                    {
                        <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@SubmitTest">Finish Test</MudButton>
                    }
                </MudCardActions>
            </MudCard>
        </MudItem>
    @if (!string.IsNullOrEmpty(DisplayQuestion.FileName))
    {
        <MudItem xs="4">
            <MudImage Src="@DisplayQuestion.ImageFilePath" />
        </MudItem>
    }
    <MudItem xs="12" sm="3">
                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@SubmitTest">Quit Test</MudButton>
    </MudItem>
    </MudGrid>

        <MudPopover Open="@IsPopOpen" Fixed="true" Class="px-4 pt-4">
            <div class="d-flex flex-column">
                <MudText>Are you sure, you want to quit?, If you click yes, this test won't be recorded!</MudText>
                <MudButton OnClick="@ConfirmPop" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Yes</MudButton>
                <MudButton OnClick="@CancelPop" Class="ml-auto mr-n3 mb-1" Color="Color.Error">No</MudButton>
            </div>
        </MudPopover>
}

@code {
    ///  <summary>
    ///  This is my change
    /// </summary>
    private Question DisplayQuestion; //current question to be displayed
    private int index = 0; // position of the question in the list
    private int UserScore = 0;
    private bool IsSubmitted = false; // flag to check if test is submitted.
    private bool IsPopOpen = false;
    private Test CurrentTest;

    public string username { get; set; }


    private string avatarName => username?.Substring(0, 2);
    private QuestionManager _QManager = new QuestionManager();
    private UserManager _UManager = new UserManager();

    /// <summary>
    /// To Start off your page with initial Data
    /// </summary>
    protected override void OnInitialized()
    {
        if(!RookieDriverContext.IsUserLoggedIn)
        {
            navigationManager.NavigateTo($"/", forceLoad: true);
        }

        username = RookieDriverContext.LoggedInUsername;

        InitializeQuestion();
    }

    private void InitializeQuestion()
    {
        index = 0;
        IsSubmitted = false;

        CurrentTest = new Test();

        CurrentTest.TotalScore = _QManager.TotalQuestionCount();
        CurrentTest.PassScore = _QManager.PassScoreCount();
        CurrentTest.TestDate = DateTime.Now.Date;
        CurrentTest.Username = username;

        CurrentTest.QuestionList = _QManager.GiveRandomQuestions();
        //CurrentTest.QuestionList = _QManager.GiveAllQuestions();

        DisplayQuestion = CurrentTest.QuestionList[index];
    }

    public void Next()
    {
        if (CurrentTest.QuestionList[index].UserAnswer != 0)
        {
            index++;
            DisplayQuestion = CurrentTest.QuestionList[index];
        }
    }

    public void FinishTest()
    {
        navigationManager.NavigateTo($"/user", forceLoad: true);
    }

    public void RetakeTest()
    {
        InitializeQuestion();
    }

    public void SubmitTest()
    {
        foreach (Question qAnswered in CurrentTest.QuestionList)
        {
            if(qAnswered.CorrectAnswer == qAnswered.UserAnswer)
            {
                UserScore = UserScore + 1;
            }
        }

        CurrentTest.FinalScore = UserScore;

        _UManager.SaveTest(CurrentTest);

        IsSubmitted = true;
    }

    public void QuitTest()
    {
        IsPopOpen = true;
    }

    public void ConfirmPop()
    {
        IsPopOpen = false;
        navigationManager.NavigateTo($"/user", forceLoad: true);
    }

    public void CancelPop()
    {
        IsPopOpen = false;
    }
}


